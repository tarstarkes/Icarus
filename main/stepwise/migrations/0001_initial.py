# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-02-23 17:45
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import stepwise.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_number', models.IntegerField()),
                ('activity_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'stepwise_restoration_activities',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='bsr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bsr', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'stepwise_bsr',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='bsr_tier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bsr_tier', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'stepwise_bsr_tier',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to=stepwise.models.get_doc_path)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date_created'],
                'db_table': 'stepwise_comment',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Draft',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('draft_title', models.CharField(blank=True, max_length=200)),
                ('draft_file', models.FileField(upload_to=stepwise.models.get_draft_path)),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'stepwise_draft_file',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Landowner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('landowner_name', models.CharField(max_length=100)),
                ('landowner_address', models.CharField(blank=True, max_length=200, null=True)),
                ('landowner_phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the form 'XXX-XXX-XXXX'. Area code is required.", regex='^[0-9]{3}-[0-9]{3}-[0-9]{4}$')])),
                ('landowner_email', models.EmailField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'stepwise_landowner',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Overall_status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'stepwise_overall_status',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Permits_consults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permit_consult_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'stepwise_permit_consult',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.NullBooleanField()),
                ('evaluation', models.NullBooleanField()),
                ('final_approval', models.NullBooleanField()),
                ('percent_done', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('current_step', models.IntegerField(blank=True, default=1)),
                ('overall_status_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stepwise.Overall_status')),
            ],
            options={
                'ordering': ['-date_created'],
                'db_table': 'stepwise_process',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_title', models.CharField(max_length=100)),
                ('proposal_file', models.FileField(upload_to=stepwise.models.get_proposal_path)),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'stepwise_proposal_file',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Prospectus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('tech_contact_name', models.CharField(blank=True, max_length=50, null=True)),
                ('tech_contact_org', models.CharField(blank=True, max_length=50, null=True)),
                ('tech_contact_ph', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the form 'XXX-XXX-XXXX'. Area code is required.", regex='^[0-9]{3}-[0-9]{3}-[0-9]{4}$')])),
                ('tech_contact_email', models.EmailField(blank=True, max_length=50)),
                ('opp_lead_name', models.CharField(max_length=50, null=True)),
                ('opp_lead_org', models.CharField(blank=True, max_length=50, null=True)),
                ('opp_lead_ph', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the form 'XXX-XXX-XXXX'. Area code is required.", regex='^[0-9]{3}-[0-9]{3}-[0-9]{4}$')])),
                ('opp_lead_email', models.EmailField(blank=True, max_length=50, null=True)),
                ('landowners_contacted', models.NullBooleanField()),
                ('landowners_supportive', models.TextField(blank=True, null=True)),
                ('landowners_contribution', models.TextField(blank=True, null=True)),
                ('river_stream_name', models.CharField(blank=True, max_length=100, null=True)),
                ('river_miles', models.CharField(blank=True, max_length=20, null=True)),
                ('tributary_to', models.CharField(blank=True, max_length=100, null=True)),
                ('original_atlas_opp_score', models.CharField(blank=True, max_length=20, null=True)),
                ('original_atlas_opp_score_notes', models.TextField(blank=True, null=True)),
                ('proposed_atlas_opp_score', models.CharField(blank=True, max_length=20, null=True)),
                ('proposed_atlas_opp_score_notes', models.TextField(blank=True, null=True)),
                ('focal_species', models.TextField(blank=True, null=True)),
                ('other_species', models.TextField(blank=True, null=True)),
                ('project_description', models.TextField(blank=True, null=True)),
                ('project_objectives', models.TextField(blank=True, null=True)),
                ('major_risks', models.TextField(blank=True, null=True)),
                ('anticipated_year', models.CharField(blank=True, max_length=4, null=True, validators=[django.core.validators.RegexValidator(message='Anticipated Implementation Year must be numerical in the format XXXX, example: 2016.', regex='^[0-9]{4}$')])),
                ('monitoring', models.TextField(blank=True, null=True)),
                ('multi_phase', models.NullBooleanField()),
                ('multi_phase_desc', models.TextField(blank=True, null=True)),
                ('ph1_standalone', models.NullBooleanField()),
                ('phase_approach_value_loss', models.TextField(blank=True, null=True)),
                ('project_cost', models.CharField(blank=True, max_length=20, null=True)),
                ('bpa_funding', models.CharField(blank=True, max_length=20, null=True)),
                ('fip_funding', models.CharField(blank=True, max_length=20, null=True)),
                ('grmw_design_funds', models.NullBooleanField(choices=[(True, 'Yes'), (False, 'No')], default=None)),
                ('funds_request_option', models.CharField(blank=True, choices=[('Option 1', 'Option 1'), ('Option 2', 'Option 2')], max_length=50, null=True)),
                ('current_step', models.IntegerField(blank=True, null=True)),
                ('complete', models.BooleanField(default=False)),
                ('file', models.FileField(blank=True, null=True, upload_to=stepwise.models.get_prospectus_upload_path)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('bsr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stepwise.bsr')),
                ('bsr_tier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stepwise.bsr_tier')),
                ('permits_consultations', models.ManyToManyField(blank=True, to='stepwise.Permits_consults')),
                ('restoration_activities', models.ManyToManyField(blank=True, related_name='activities', to='stepwise.Activities')),
            ],
            options={
                'db_table': 'stepwise_prospectus',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Site_visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('document', models.FileField(upload_to=stepwise.models.get_site_visit_path)),
                ('notes', models.TextField(blank=True, null=True)),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'stepwise_site_visit',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WorkSpecialties',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_specialty', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'stepwise_work_specialty',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_type_desc', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'stepwise_work_type',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='prospectus',
            name='work_specialties',
            field=models.ManyToManyField(blank=True, to='stepwise.WorkSpecialties'),
        ),
        migrations.AddField(
            model_name='prospectus',
            name='work_type',
            field=models.ManyToManyField(blank=True, to='stepwise.WorkType'),
        ),
        migrations.AddField(
            model_name='process',
            name='proposal_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stepwise.Proposal'),
        ),
        migrations.AddField(
            model_name='process',
            name='prospectus_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stepwise.Prospectus'),
        ),
        migrations.AddField(
            model_name='process',
            name='site_visit_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stepwise.Site_visit'),
        ),
        migrations.AddField(
            model_name='process',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='landowner',
            name='prospectus_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stepwise.Prospectus'),
        ),
        migrations.AddField(
            model_name='landowner',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='draft',
            name='process_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stepwise.Process'),
        ),
        migrations.AddField(
            model_name='comment',
            name='process_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stepwise.Process'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user_id',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
