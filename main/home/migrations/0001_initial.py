# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-10-03 19:24
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectdbContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contactrole_id', models.IntegerField(db_column='contactRole_id')),
                ('contacttype_id', models.IntegerField(db_column='contactType_id')),
                ('project_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_contact',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbContactrole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_contactrole',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbContacttype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('orgtype_id', models.IntegerField(db_column='orgType_id')),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_contacttype',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbContract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contractnumber', models.CharField(db_column='contractNumber', max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('fundingorg_id', models.IntegerField(db_column='fundingOrg_id')),
                ('project_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_contract',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('project_id', models.IntegerField()),
                ('type_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_date',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbDatetype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_datetype',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=200)),
                ('note', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('project_id', models.IntegerField()),
                ('type_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_document',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbDocumenttype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_documenttype',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbGps',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('description', models.CharField(max_length=300)),
                ('project_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_gps',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbGrmwdatabase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('collection', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_grmwdatabase',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbGrmwdatabasepolygon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mpoly', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_grmwdatabasepolygon',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_list',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orgrole_id', models.IntegerField(db_column='orgRole_id')),
                ('orgtype_id', models.IntegerField(db_column='orgType_id')),
                ('project_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_organization',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbOrganizationrole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_organizationrole',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbOrganizationtype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('abr', models.CharField(max_length=10)),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_organizationtype',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbPiscesmetrics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_number', models.CharField(max_length=20)),
                ('project_title', models.CharField(max_length=200)),
                ('contract_number', models.CharField(max_length=50)),
                ('we_id', models.CharField(max_length=4)),
                ('wse_id', models.CharField(blank=True, max_length=20, null=True)),
                ('wse_title', models.CharField(blank=True, max_length=200, null=True)),
                ('wse_progress', models.CharField(blank=True, max_length=50, null=True)),
                ('measures', models.CharField(blank=True, max_length=200, null=True)),
                ('hli', models.CharField(blank=True, max_length=50, null=True)),
                ('metric_id', models.CharField(blank=True, max_length=10, null=True)),
                ('metric', models.CharField(blank=True, max_length=200, null=True)),
                ('actual', models.FloatField(blank=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_piscesmetrics',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('fiscalyear', models.IntegerField()),
                ('publish', models.BooleanField()),
                ('grmw_id', models.IntegerField()),
                ('description', models.CharField(max_length=10000)),
                ('notes', models.CharField(blank=True, max_length=10000, null=True)),
                ('flickr', models.CharField(blank=True, max_length=100, null=True)),
                ('status_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_project',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbProjectboundary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
                ('geom', models.TextField()),
                ('project_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_projectboundary',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbProjectlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('list_id', models.IntegerField()),
                ('project_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_projectlist',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbProjectreporting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reporting_completed', models.BooleanField()),
                ('reporting_name', models.CharField(max_length=50)),
                ('reporting_date', models.DateField()),
                ('reporting_project_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_projectreporting',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
                ('mpoint', models.TextField()),
                ('project_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_site',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('scientific', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=500)),
                ('link', models.CharField(max_length=200)),
                ('image', models.CharField(max_length=200)),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_species',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbSpeciesrel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary', models.BooleanField()),
                ('project_id', models.IntegerField()),
                ('species_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_speciesrel',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbStatustype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_statustype',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('project_id', models.IntegerField()),
                ('task_id', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_task',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbTasksubtype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
                ('tasktype_id', models.IntegerField(db_column='taskType_id')),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_tasksubtype',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbTasktype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_tasktype',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbTestpoly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mpoly', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_testpoly',
            },
        ),
        migrations.CreateModel(
            name='ProjectdbUnittype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'projectdb_unittype',
            },
        ),
    ]
