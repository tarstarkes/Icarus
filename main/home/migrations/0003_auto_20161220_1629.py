# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-12-21 00:29
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0002_auto_20161019_1326'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'projectdb_contact',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contactrole',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'projectdb_contactrole',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contacttype',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'projectdb_contacttype',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('contractnumber', models.CharField(db_column='contractNumber', max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
            ],
            options={
                'db_table': 'projectdb_contract',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Date',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'projectdb_date',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DateType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'projectdb_datetype',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('url', models.CharField(max_length=200)),
                ('note', models.CharField(max_length=100)),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'projectdb_document',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'projectdb_documenttype',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Gps',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('description', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'projectdb_gps',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='List',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.TextField()),
            ],
            options={
                'db_table': 'projectdb_list',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'projectdb_organization',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Organizationrole',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'projectdb_organizationrole',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Organizationtype',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('abr', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'projectdb_organizationtype',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('fiscalyear', models.IntegerField()),
                ('publish', models.BooleanField()),
                ('grmw_id', models.IntegerField()),
                ('description', models.CharField(max_length=10000)),
                ('notes', models.CharField(blank=True, max_length=10000, null=True)),
                ('flickr', models.CharField(blank=True, max_length=100, null=True)),
                ('status_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'projectdb_project',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Projectboundary',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('geom', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('project_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Project')),
            ],
            options={
                'db_table': 'projectdb_projectboundary',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProjectList',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('note', models.TextField()),
                ('list_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plList', to='home.List')),
                ('project_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Project')),
            ],
            options={
                'db_table': 'projectdb_projectlist',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
                ('mpoint', django.contrib.gis.db.models.fields.MultiPointField(srid=32611)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Project')),
            ],
            options={
                'db_table': 'projectdb_site',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('scientific', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=500)),
                ('link', models.CharField(max_length=200)),
                ('image', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'projectdb_species',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SpeciesRel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('primary', models.BooleanField()),
                ('project_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Project')),
                ('species_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Species')),
            ],
            options={
                'db_table': 'projectdb_speciesrel',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Statustype',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'projectdb_statustype',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('project_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Project')),
            ],
            options={
                'db_table': 'projectdb_task',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tasksubtype',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('tasktype_id', models.IntegerField(db_column='taskType_id')),
            ],
            options={
                'db_table': 'projectdb_tasksubtype',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tasktype',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'projectdb_tasktype',
                'managed': True,
            },
        ),
        migrations.AlterField(
            model_name='ripples',
            name='id',
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='ripplesarticle',
            name='id',
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='ripplesedition',
            name='id',
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AddField(
            model_name='task',
            name='task_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_task_type', to='home.Tasksubtype'),
        ),
        migrations.AddField(
            model_name='organization',
            name='orgrole_id',
            field=models.ForeignKey(blank=True, db_column='orgRole_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Organizationrole'),
        ),
        migrations.AddField(
            model_name='organization',
            name='orgtype_id',
            field=models.ForeignKey(db_column='orgType_id', on_delete=django.db.models.deletion.CASCADE, to='home.Organizationtype'),
        ),
        migrations.AddField(
            model_name='organization',
            name='project_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Project'),
        ),
        migrations.AddField(
            model_name='gps',
            name='project_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Project'),
        ),
        migrations.AddField(
            model_name='document',
            name='project_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Project'),
        ),
        migrations.AddField(
            model_name='document',
            name='type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.DocumentType'),
        ),
        migrations.AddField(
            model_name='date',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Project'),
        ),
        migrations.AddField(
            model_name='date',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.DateType'),
        ),
        migrations.AddField(
            model_name='contract',
            name='fundingorg_id',
            field=models.ForeignKey(blank=True, db_column='fundingOrg_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Organization'),
        ),
        migrations.AddField(
            model_name='contract',
            name='project_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Project'),
        ),
        migrations.AddField(
            model_name='contacttype',
            name='orgtype_id',
            field=models.ForeignKey(blank=True, db_column='orgType_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Organizationtype'),
        ),
        migrations.AddField(
            model_name='contact',
            name='contactrole_id',
            field=models.ForeignKey(blank=True, db_column='contactRole_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Contactrole'),
        ),
        migrations.AddField(
            model_name='contact',
            name='contacttype_id',
            field=models.ForeignKey(blank=True, db_column='contactType_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Contacttype'),
        ),
        migrations.AddField(
            model_name='contact',
            name='project_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Project'),
        ),
    ]
